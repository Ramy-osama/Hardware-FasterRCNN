// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Max_Pooling,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.409000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=471,HLS_SYN_LUT=1541,HLS_VERSION=2019_2}" *)

module Max_Pooling (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_q0,
        image_r_address1,
        image_r_ce1,
        image_r_q1,
        stride,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] image_r_address0;
output   image_r_ce0;
input  [31:0] image_r_q0;
output  [6:0] image_r_address1;
output   image_r_ce1;
input  [31:0] image_r_q1;
input  [31:0] stride;
output  [4:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] image_r_address0;
reg image_r_ce0;
reg[6:0] image_r_address1;
reg image_r_ce1;
reg[4:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[31:0] out_r_d0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] k_fu_368_p2;
reg   [1:0] k_reg_1094;
wire    ap_CS_fsm_state2;
wire   [5:0] zext_ln14_fu_374_p1;
reg   [5:0] zext_ln14_reg_1099;
wire   [0:0] icmp_ln9_fu_362_p2;
wire   [7:0] zext_ln14_1_fu_378_p1;
reg   [7:0] zext_ln14_1_reg_1107;
wire   [35:0] sub_ln20_fu_412_p2;
reg   [35:0] sub_ln20_reg_1122;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln14_fu_382_p2;
wire   [35:0] sub_ln20_1_fu_448_p2;
reg   [35:0] sub_ln20_1_reg_1130;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln16_fu_454_p2;
wire   [31:0] i_fu_538_p2;
reg   [31:0] image_load_reg_1156;
wire    ap_CS_fsm_state5;
reg   [31:0] image_load_1_reg_1165;
wire   [0:0] grp_fu_287_p2;
reg   [0:0] icmp_ln20_reg_1174;
reg   [6:0] image_addr_3_reg_1183;
wire   [0:0] icmp_ln20_1_fu_621_p2;
reg   [0:0] icmp_ln20_1_reg_1188;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln20_2_reg_1192;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_339_p3;
wire   [31:0] grp_fu_348_p3;
wire   [0:0] icmp_ln32_fu_690_p2;
reg   [0:0] icmp_ln32_reg_1206;
reg   [6:0] image_addr_5_reg_1215;
wire   [0:0] icmp_ln32_1_fu_772_p2;
reg   [0:0] icmp_ln32_1_reg_1220;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln32_2_fu_777_p2;
reg   [0:0] icmp_ln32_2_reg_1224;
wire    ap_CS_fsm_state9;
reg   [6:0] image_addr_7_reg_1243;
reg   [31:0] image_load_6_reg_1249;
wire    ap_CS_fsm_state10;
wire   [0:0] or_ln45_fu_924_p2;
reg   [0:0] or_ln45_reg_1256;
wire   [0:0] icmp_ln45_2_fu_930_p2;
reg   [0:0] icmp_ln45_2_reg_1260;
wire    ap_CS_fsm_state11;
wire   [31:0] j_fu_1080_p2;
wire    ap_CS_fsm_state12;
reg   [1:0] k_0_reg_168;
reg   [31:0] c1_0_reg_179;
reg   [31:0] r1_0_reg_191;
reg   [31:0] i_0_reg_203;
reg   [31:0] ap_phi_mux_c1_6_phi_fu_255_p10;
reg  signed [31:0] c1_1_reg_215;
reg   [31:0] ap_phi_mux_r1_6_phi_fu_273_p10;
reg  signed [31:0] r1_1_reg_227;
reg  signed [31:0] j_0_reg_239;
reg   [31:0] c1_6_reg_251;
wire   [0:0] or_ln58_1_fu_1010_p2;
reg   [31:0] r1_6_reg_269;
wire   [63:0] zext_ln20_fu_496_p1;
wire   [63:0] zext_ln20_1_fu_533_p1;
wire   [63:0] zext_ln20_2_fu_579_p1;
wire   [63:0] zext_ln20_3_fu_616_p1;
wire   [63:0] zext_ln22_fu_685_p1;
wire   [63:0] zext_ln32_fu_730_p1;
wire   [63:0] zext_ln32_1_fu_767_p1;
wire   [63:0] zext_ln34_fu_841_p1;
wire   [63:0] zext_ln45_fu_882_p1;
wire   [63:0] zext_ln45_1_fu_919_p1;
wire   [63:0] zext_ln47_fu_994_p1;
wire   [63:0] zext_ln60_fu_1075_p1;
reg   [31:0] grp_fu_287_p0;
reg   [31:0] grp_fu_287_p1;
wire   [31:0] grp_fu_299_p2;
wire   [30:0] grp_fu_311_p4;
wire   [0:0] grp_fu_305_p2;
wire   [0:0] grp_fu_321_p2;
wire   [0:0] grp_fu_327_p2;
wire   [31:0] grp_fu_333_p2;
wire   [34:0] tmp_fu_388_p3;
wire   [32:0] tmp_1_fu_400_p3;
wire  signed [35:0] sext_ln20_fu_396_p1;
wire  signed [35:0] sext_ln20_1_fu_408_p1;
wire   [31:0] add_ln20_fu_418_p2;
wire   [34:0] tmp_2_fu_424_p3;
wire   [32:0] tmp_3_fu_436_p3;
wire  signed [35:0] sext_ln20_2_fu_432_p1;
wire  signed [35:0] sext_ln20_3_fu_444_p1;
wire  signed [35:0] sext_ln20_4_fu_460_p1;
wire   [35:0] add_ln20_2_fu_464_p2;
wire   [5:0] trunc_ln20_1_fu_473_p1;
wire   [7:0] p_shl5_cast_fu_477_p3;
wire   [7:0] trunc_ln20_fu_469_p1;
wire   [7:0] sub_ln20_2_fu_485_p2;
wire   [7:0] add_ln20_3_fu_491_p2;
wire   [35:0] add_ln20_4_fu_501_p2;
wire   [5:0] trunc_ln20_3_fu_510_p1;
wire   [7:0] p_shl4_cast_fu_514_p3;
wire   [7:0] trunc_ln20_2_fu_506_p1;
wire   [7:0] sub_ln20_3_fu_522_p2;
wire   [7:0] add_ln20_5_fu_528_p2;
wire   [31:0] grp_fu_293_p2;
wire  signed [35:0] sext_ln20_5_fu_543_p1;
wire   [35:0] add_ln20_6_fu_547_p2;
wire   [5:0] trunc_ln20_5_fu_556_p1;
wire   [7:0] p_shl7_cast_fu_560_p3;
wire   [7:0] trunc_ln20_4_fu_552_p1;
wire   [7:0] sub_ln20_4_fu_568_p2;
wire   [7:0] add_ln20_7_fu_574_p2;
wire   [35:0] add_ln20_8_fu_584_p2;
wire   [5:0] trunc_ln20_7_fu_593_p1;
wire   [7:0] p_shl6_cast_fu_597_p3;
wire   [7:0] trunc_ln20_6_fu_589_p1;
wire   [7:0] sub_ln20_5_fu_605_p2;
wire   [7:0] add_ln20_9_fu_611_p2;
wire   [33:0] tmp_8_fu_634_p3;
wire  signed [34:0] sext_ln22_2_fu_642_p1;
wire  signed [34:0] sext_ln22_1_fu_630_p1;
wire  signed [34:0] sext_ln22_fu_626_p1;
wire   [34:0] sub_ln22_fu_646_p2;
wire   [34:0] add_ln22_fu_652_p2;
wire   [3:0] trunc_ln22_1_fu_662_p1;
wire   [5:0] p_shl8_cast_fu_666_p3;
wire   [5:0] trunc_ln22_fu_658_p1;
wire   [5:0] sub_ln22_1_fu_674_p2;
wire   [5:0] add_ln22_1_fu_680_p2;
wire  signed [35:0] sext_ln32_fu_694_p1;
wire   [35:0] add_ln32_1_fu_698_p2;
wire   [5:0] trunc_ln32_1_fu_707_p1;
wire   [7:0] p_shl_cast_fu_711_p3;
wire   [7:0] trunc_ln32_fu_703_p1;
wire   [7:0] sub_ln32_fu_719_p2;
wire   [7:0] add_ln32_2_fu_725_p2;
wire   [35:0] add_ln32_3_fu_735_p2;
wire   [5:0] trunc_ln32_3_fu_744_p1;
wire   [7:0] p_shl1_cast_fu_748_p3;
wire   [7:0] trunc_ln32_2_fu_740_p1;
wire   [7:0] sub_ln32_1_fu_756_p2;
wire   [7:0] add_ln32_4_fu_762_p2;
wire   [33:0] tmp_s_fu_790_p3;
wire  signed [34:0] sext_ln34_2_fu_798_p1;
wire  signed [34:0] sext_ln34_1_fu_786_p1;
wire  signed [34:0] sext_ln34_fu_782_p1;
wire   [34:0] sub_ln34_fu_802_p2;
wire   [34:0] add_ln34_fu_808_p2;
wire   [3:0] trunc_ln34_1_fu_818_p1;
wire   [5:0] p_shl9_cast_fu_822_p3;
wire   [5:0] trunc_ln34_fu_814_p1;
wire   [5:0] sub_ln34_1_fu_830_p2;
wire   [5:0] add_ln34_1_fu_836_p2;
wire  signed [35:0] sext_ln45_fu_846_p1;
wire   [35:0] add_ln45_1_fu_850_p2;
wire   [5:0] trunc_ln45_1_fu_859_p1;
wire   [7:0] p_shl2_cast_fu_863_p3;
wire   [7:0] trunc_ln45_fu_855_p1;
wire   [7:0] sub_ln45_fu_871_p2;
wire   [7:0] add_ln45_2_fu_877_p2;
wire   [35:0] add_ln45_3_fu_887_p2;
wire   [5:0] trunc_ln45_3_fu_896_p1;
wire   [7:0] p_shl3_cast_fu_900_p3;
wire   [7:0] trunc_ln45_2_fu_892_p1;
wire   [7:0] sub_ln45_1_fu_908_p2;
wire   [7:0] add_ln45_4_fu_914_p2;
wire   [0:0] grp_fu_357_p2;
wire   [33:0] tmp_6_fu_943_p3;
wire  signed [34:0] sext_ln47_2_fu_951_p1;
wire  signed [34:0] sext_ln47_1_fu_939_p1;
wire  signed [34:0] sext_ln47_fu_935_p1;
wire   [34:0] sub_ln47_fu_955_p2;
wire   [34:0] add_ln47_fu_961_p2;
wire   [3:0] trunc_ln47_1_fu_971_p1;
wire   [5:0] p_shl10_cast_fu_975_p3;
wire   [5:0] trunc_ln47_fu_967_p1;
wire   [5:0] sub_ln47_1_fu_983_p2;
wire   [5:0] add_ln47_1_fu_989_p2;
wire   [0:0] icmp_ln58_1_fu_999_p2;
wire   [0:0] or_ln58_fu_1004_p2;
wire   [33:0] tmp_9_fu_1024_p3;
wire  signed [34:0] sext_ln60_2_fu_1032_p1;
wire  signed [34:0] sext_ln60_1_fu_1020_p1;
wire  signed [34:0] sext_ln60_fu_1016_p1;
wire   [34:0] sub_ln60_fu_1036_p2;
wire   [34:0] add_ln60_fu_1042_p2;
wire   [3:0] trunc_ln60_1_fu_1052_p1;
wire   [5:0] p_shl11_cast_fu_1056_p3;
wire   [5:0] trunc_ln60_fu_1048_p1;
wire   [5:0] sub_ln60_1_fu_1064_p2;
wire   [5:0] add_ln60_1_fu_1070_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_condition_305;
reg    ap_condition_343;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_0_reg_179 <= 32'd0;
    end else if (((icmp_ln16_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_0_reg_179 <= c1_1_reg_215;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_382_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c1_1_reg_215 <= c1_0_reg_179;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c1_1_reg_215 <= ap_phi_mux_c1_6_phi_fu_255_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1)) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))))) begin
        c1_6_reg_251 <= c1_1_reg_215;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)))) | ((icmp_ln45_2_fu_930_p2 == 1'd0) & (or_ln45_reg_1256 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln32_2_fu_777_p2 == 1'd0) & (icmp_ln32_1_reg_1220 == 1'd0) & (icmp_ln32_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln20_1_reg_1188 == 1'd0) & (icmp_ln20_reg_1174 == 1'd0) & (grp_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        c1_6_reg_251 <= grp_fu_339_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_203 <= 32'd0;
    end else if (((icmp_ln16_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_203 <= i_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_382_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_reg_239 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_239 <= j_fu_1080_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_382_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        k_0_reg_168 <= k_reg_1094;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_0_reg_168 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        r1_0_reg_191 <= 32'd0;
    end else if (((icmp_ln16_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        r1_0_reg_191 <= r1_1_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_382_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r1_1_reg_227 <= r1_0_reg_191;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r1_1_reg_227 <= ap_phi_mux_r1_6_phi_fu_273_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1)) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))))) begin
        r1_6_reg_269 <= r1_1_reg_227;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)))) | ((icmp_ln45_2_fu_930_p2 == 1'd0) & (or_ln45_reg_1256 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln32_2_fu_777_p2 == 1'd0) & (icmp_ln32_1_reg_1220 == 1'd0) & (icmp_ln32_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln20_1_reg_1188 == 1'd0) & (icmp_ln20_reg_1174 == 1'd0) & (grp_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        r1_6_reg_269 <= grp_fu_348_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln20_1_reg_1188 <= icmp_ln20_1_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_1_reg_1188 == 1'd0) & (icmp_ln20_reg_1174 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln20_2_reg_1192 <= grp_fu_287_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln20_reg_1174 <= grp_fu_287_p2;
        image_load_1_reg_1165 <= image_r_q1;
        image_load_reg_1156 <= image_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln32_1_reg_1220 <= icmp_ln32_1_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_reg_1220 == 1'd0) & (icmp_ln32_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln32_2_reg_1224 <= icmp_ln32_2_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln20_reg_1174 == 1'd1) | ((icmp_ln20_1_reg_1188 == 1'd1) | (grp_fu_287_p2 == 1'd1))))) begin
        icmp_ln32_reg_1206 <= icmp_ln32_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln45_reg_1256 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        icmp_ln45_2_reg_1260 <= icmp_ln45_2_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        image_addr_3_reg_1183 <= zext_ln20_3_fu_616_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((((icmp_ln20_1_reg_1188 == 1'd1) & (icmp_ln32_fu_690_p2 == 1'd0)) | ((grp_fu_287_p2 == 1'd1) & (icmp_ln32_fu_690_p2 == 1'd0))) | ((icmp_ln20_reg_1174 == 1'd1) & (icmp_ln32_fu_690_p2 == 1'd0))))) begin
        image_addr_5_reg_1215 <= zext_ln32_1_fu_767_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ((icmp_ln32_reg_1206 == 1'd1) | ((icmp_ln32_2_fu_777_p2 == 1'd1) | (icmp_ln32_1_reg_1220 == 1'd1))))) begin
        image_addr_7_reg_1243 <= zext_ln45_1_fu_919_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        image_load_6_reg_1249 <= image_r_q0;
        or_ln45_reg_1256 <= or_ln45_fu_924_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_reg_1094 <= k_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_382_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_ln20_1_reg_1130[35 : 1] <= sub_ln20_1_fu_448_p2[35 : 1];
        sub_ln20_reg_1122[35 : 1] <= sub_ln20_fu_412_p2[35 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln14_1_reg_1107[1 : 0] <= zext_ln14_1_fu_378_p1[1 : 0];
        zext_ln14_reg_1099[1 : 0] <= zext_ln14_fu_374_p1[1 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln9_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_343)) begin
            ap_phi_mux_c1_6_phi_fu_255_p10 = c1_1_reg_215;
        end else if ((1'b1 == ap_condition_305)) begin
            ap_phi_mux_c1_6_phi_fu_255_p10 = grp_fu_339_p3;
        end else begin
            ap_phi_mux_c1_6_phi_fu_255_p10 = c1_6_reg_251;
        end
    end else begin
        ap_phi_mux_c1_6_phi_fu_255_p10 = c1_6_reg_251;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_343)) begin
            ap_phi_mux_r1_6_phi_fu_273_p10 = r1_1_reg_227;
        end else if ((1'b1 == ap_condition_305)) begin
            ap_phi_mux_r1_6_phi_fu_273_p10 = grp_fu_348_p3;
        end else begin
            ap_phi_mux_r1_6_phi_fu_273_p10 = r1_6_reg_269;
        end
    end else begin
        ap_phi_mux_r1_6_phi_fu_273_p10 = r1_6_reg_269;
    end
end

always @ (*) begin
    if (((icmp_ln9_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_287_p0 = image_load_reg_1156;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_287_p0 = image_r_q0;
    end else begin
        grp_fu_287_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_287_p1 = image_load_1_reg_1165;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_287_p1 = image_r_q1;
    end else begin
        grp_fu_287_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        image_r_address0 = image_addr_7_reg_1243;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        image_r_address0 = zext_ln45_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        image_r_address0 = zext_ln32_fu_730_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        image_r_address0 = zext_ln20_2_fu_579_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_address0 = zext_ln20_fu_496_p1;
    end else begin
        image_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        image_r_address1 = image_addr_7_reg_1243;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        image_r_address1 = image_addr_5_reg_1215;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        image_r_address1 = image_addr_3_reg_1183;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_address1 = zext_ln20_1_fu_533_p1;
    end else begin
        image_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        image_r_ce0 = 1'b1;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        image_r_ce1 = 1'b1;
    end else begin
        image_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_r_address0 = zext_ln60_fu_1075_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        out_r_address0 = zext_ln47_fu_994_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_r_address0 = zext_ln34_fu_841_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_address0 = zext_ln22_fu_685_p1;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_r_d0 = image_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        out_r_d0 = image_load_6_reg_1249;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_r_d0 = image_load_1_reg_1165;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_d0 = image_load_reg_1156;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)))) | ((icmp_ln45_2_fu_930_p2 == 1'd0) & (or_ln45_reg_1256 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln32_2_fu_777_p2 == 1'd0) & (icmp_ln32_1_reg_1220 == 1'd0) & (icmp_ln32_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln20_1_reg_1188 == 1'd0) & (icmp_ln20_reg_1174 == 1'd0) & (grp_fu_287_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_362_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln14_fu_382_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln16_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_fu_287_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((((icmp_ln32_fu_690_p2 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1)) | ((icmp_ln32_fu_690_p2 == 1'd1) & (grp_fu_287_p2 == 1'd1))) | ((icmp_ln32_fu_690_p2 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state7) & ((((icmp_ln20_1_reg_1188 == 1'd1) & (icmp_ln32_fu_690_p2 == 1'd0)) | ((grp_fu_287_p2 == 1'd1) & (icmp_ln32_fu_690_p2 == 1'd0))) | ((icmp_ln20_reg_1174 == 1'd1) & (icmp_ln32_fu_690_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln32_2_fu_777_p2 == 1'd0) & (icmp_ln32_1_reg_1220 == 1'd0) & (icmp_ln32_reg_1206 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_2_fu_464_p2 = ($signed(sext_ln20_4_fu_460_p1) + $signed(sub_ln20_reg_1122));

assign add_ln20_3_fu_491_p2 = (zext_ln14_1_reg_1107 + sub_ln20_2_fu_485_p2);

assign add_ln20_4_fu_501_p2 = ($signed(sext_ln20_4_fu_460_p1) + $signed(sub_ln20_1_reg_1130));

assign add_ln20_5_fu_528_p2 = (zext_ln14_1_reg_1107 + sub_ln20_3_fu_522_p2);

assign add_ln20_6_fu_547_p2 = ($signed(sext_ln20_5_fu_543_p1) + $signed(sub_ln20_reg_1122));

assign add_ln20_7_fu_574_p2 = (zext_ln14_1_reg_1107 + sub_ln20_4_fu_568_p2);

assign add_ln20_8_fu_584_p2 = ($signed(sext_ln20_5_fu_543_p1) + $signed(sub_ln20_1_reg_1130));

assign add_ln20_9_fu_611_p2 = (zext_ln14_1_reg_1107 + sub_ln20_5_fu_605_p2);

assign add_ln20_fu_418_p2 = (i_0_reg_203 + 32'd1);

assign add_ln22_1_fu_680_p2 = (zext_ln14_reg_1099 + sub_ln22_1_fu_674_p2);

assign add_ln22_fu_652_p2 = ($signed(sext_ln22_fu_626_p1) + $signed(sub_ln22_fu_646_p2));

assign add_ln32_1_fu_698_p2 = ($signed(sext_ln32_fu_694_p1) + $signed(sub_ln20_reg_1122));

assign add_ln32_2_fu_725_p2 = (zext_ln14_1_reg_1107 + sub_ln32_fu_719_p2);

assign add_ln32_3_fu_735_p2 = ($signed(sext_ln32_fu_694_p1) + $signed(sub_ln20_1_reg_1130));

assign add_ln32_4_fu_762_p2 = (zext_ln14_1_reg_1107 + sub_ln32_1_fu_756_p2);

assign add_ln34_1_fu_836_p2 = (zext_ln14_reg_1099 + sub_ln34_1_fu_830_p2);

assign add_ln34_fu_808_p2 = ($signed(sext_ln34_fu_782_p1) + $signed(sub_ln34_fu_802_p2));

assign add_ln45_1_fu_850_p2 = ($signed(sext_ln45_fu_846_p1) + $signed(sub_ln20_reg_1122));

assign add_ln45_2_fu_877_p2 = (zext_ln14_1_reg_1107 + sub_ln45_fu_871_p2);

assign add_ln45_3_fu_887_p2 = ($signed(sext_ln45_fu_846_p1) + $signed(sub_ln20_1_reg_1130));

assign add_ln45_4_fu_914_p2 = (zext_ln14_1_reg_1107 + sub_ln45_1_fu_908_p2);

assign add_ln47_1_fu_989_p2 = (zext_ln14_reg_1099 + sub_ln47_1_fu_983_p2);

assign add_ln47_fu_961_p2 = ($signed(sext_ln47_fu_935_p1) + $signed(sub_ln47_fu_955_p2));

assign add_ln60_1_fu_1070_p2 = (zext_ln14_reg_1099 + sub_ln60_1_fu_1064_p2);

assign add_ln60_fu_1042_p2 = ($signed(sext_ln60_fu_1016_p1) + $signed(sub_ln60_fu_1036_p2));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_305 = (((((((((((((((((((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0))) | ((or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1) & (or_ln58_1_fu_1010_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_343 = (((((((((((((((((((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1)) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_2_reg_1192 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_1_reg_1188 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_2_reg_1224 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_1_reg_1220 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (icmp_ln45_2_reg_1260 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1))) | ((or_ln58_1_fu_1010_p2 == 1'd1) & (or_ln45_reg_1256 == 1'd1) & (icmp_ln32_reg_1206 == 1'd1) & (icmp_ln20_reg_1174 == 1'd1)));
end

assign grp_fu_287_p2 = (($signed(grp_fu_287_p0) < $signed(grp_fu_287_p1)) ? 1'b1 : 1'b0);

assign grp_fu_293_p2 = ($signed(32'd1) + $signed(j_0_reg_239));

assign grp_fu_299_p2 = ($signed(32'd1) + $signed(c1_1_reg_215));

assign grp_fu_305_p2 = ((grp_fu_299_p2 == 32'd3) ? 1'b1 : 1'b0);

assign grp_fu_311_p4 = {{r1_1_reg_227[31:1]}};

assign grp_fu_321_p2 = (($signed(grp_fu_311_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign grp_fu_327_p2 = (grp_fu_321_p2 & grp_fu_305_p2);

assign grp_fu_333_p2 = ($signed(32'd1) + $signed(r1_1_reg_227));

assign grp_fu_339_p3 = ((grp_fu_327_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_299_p2);

assign grp_fu_348_p3 = ((grp_fu_327_p2[0:0] === 1'b1) ? grp_fu_333_p2 : r1_1_reg_227);

assign grp_fu_357_p2 = (($signed(image_r_q0) < $signed(image_load_reg_1156)) ? 1'b1 : 1'b0);

assign i_fu_538_p2 = (i_0_reg_203 + stride);

assign icmp_ln14_fu_382_p2 = (($signed(i_0_reg_203) < $signed(32'd5)) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_454_p2 = (($signed(j_0_reg_239) < $signed(32'd5)) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_621_p2 = (($signed(image_load_reg_1156) < $signed(image_r_q0)) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_772_p2 = (($signed(image_load_1_reg_1165) < $signed(image_r_q0)) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_777_p2 = (($signed(image_load_1_reg_1165) < $signed(image_r_q1)) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_690_p2 = (($signed(image_load_1_reg_1165) < $signed(image_load_reg_1156)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_930_p2 = (($signed(image_load_6_reg_1249) < $signed(image_r_q1)) ? 1'b1 : 1'b0);

assign icmp_ln58_1_fu_999_p2 = (($signed(image_r_q0) < $signed(image_load_6_reg_1249)) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_362_p2 = ((k_0_reg_168 == 2'd3) ? 1'b1 : 1'b0);

assign j_fu_1080_p2 = ($signed(j_0_reg_239) + $signed(stride));

assign k_fu_368_p2 = (k_0_reg_168 + 2'd1);

assign or_ln45_fu_924_p2 = (grp_fu_357_p2 | grp_fu_287_p2);

assign or_ln58_1_fu_1010_p2 = (or_ln58_fu_1004_p2 | grp_fu_357_p2);

assign or_ln58_fu_1004_p2 = (icmp_ln58_1_fu_999_p2 | grp_fu_287_p2);

assign p_shl10_cast_fu_975_p3 = {{trunc_ln47_1_fu_971_p1}, {2'd0}};

assign p_shl11_cast_fu_1056_p3 = {{trunc_ln60_1_fu_1052_p1}, {2'd0}};

assign p_shl1_cast_fu_748_p3 = {{trunc_ln32_3_fu_744_p1}, {2'd0}};

assign p_shl2_cast_fu_863_p3 = {{trunc_ln45_1_fu_859_p1}, {2'd0}};

assign p_shl3_cast_fu_900_p3 = {{trunc_ln45_3_fu_896_p1}, {2'd0}};

assign p_shl4_cast_fu_514_p3 = {{trunc_ln20_3_fu_510_p1}, {2'd0}};

assign p_shl5_cast_fu_477_p3 = {{trunc_ln20_1_fu_473_p1}, {2'd0}};

assign p_shl6_cast_fu_597_p3 = {{trunc_ln20_7_fu_593_p1}, {2'd0}};

assign p_shl7_cast_fu_560_p3 = {{trunc_ln20_5_fu_556_p1}, {2'd0}};

assign p_shl8_cast_fu_666_p3 = {{trunc_ln22_1_fu_662_p1}, {2'd0}};

assign p_shl9_cast_fu_822_p3 = {{trunc_ln34_1_fu_818_p1}, {2'd0}};

assign p_shl_cast_fu_711_p3 = {{trunc_ln32_1_fu_707_p1}, {2'd0}};

assign sext_ln20_1_fu_408_p1 = $signed(tmp_1_fu_400_p3);

assign sext_ln20_2_fu_432_p1 = $signed(tmp_2_fu_424_p3);

assign sext_ln20_3_fu_444_p1 = $signed(tmp_3_fu_436_p3);

assign sext_ln20_4_fu_460_p1 = j_0_reg_239;

assign sext_ln20_5_fu_543_p1 = $signed(grp_fu_293_p2);

assign sext_ln20_fu_396_p1 = $signed(tmp_fu_388_p3);

assign sext_ln22_1_fu_630_p1 = r1_1_reg_227;

assign sext_ln22_2_fu_642_p1 = $signed(tmp_8_fu_634_p3);

assign sext_ln22_fu_626_p1 = c1_1_reg_215;

assign sext_ln32_fu_694_p1 = $signed(grp_fu_293_p2);

assign sext_ln34_1_fu_786_p1 = r1_1_reg_227;

assign sext_ln34_2_fu_798_p1 = $signed(tmp_s_fu_790_p3);

assign sext_ln34_fu_782_p1 = c1_1_reg_215;

assign sext_ln45_fu_846_p1 = $signed(grp_fu_293_p2);

assign sext_ln47_1_fu_939_p1 = r1_1_reg_227;

assign sext_ln47_2_fu_951_p1 = $signed(tmp_6_fu_943_p3);

assign sext_ln47_fu_935_p1 = c1_1_reg_215;

assign sext_ln60_1_fu_1020_p1 = r1_1_reg_227;

assign sext_ln60_2_fu_1032_p1 = $signed(tmp_9_fu_1024_p3);

assign sext_ln60_fu_1016_p1 = c1_1_reg_215;

assign sub_ln20_1_fu_448_p2 = ($signed(sext_ln20_2_fu_432_p1) - $signed(sext_ln20_3_fu_444_p1));

assign sub_ln20_2_fu_485_p2 = (p_shl5_cast_fu_477_p3 - trunc_ln20_fu_469_p1);

assign sub_ln20_3_fu_522_p2 = (p_shl4_cast_fu_514_p3 - trunc_ln20_2_fu_506_p1);

assign sub_ln20_4_fu_568_p2 = (p_shl7_cast_fu_560_p3 - trunc_ln20_4_fu_552_p1);

assign sub_ln20_5_fu_605_p2 = (p_shl6_cast_fu_597_p3 - trunc_ln20_6_fu_589_p1);

assign sub_ln20_fu_412_p2 = ($signed(sext_ln20_fu_396_p1) - $signed(sext_ln20_1_fu_408_p1));

assign sub_ln22_1_fu_674_p2 = (p_shl8_cast_fu_666_p3 - trunc_ln22_fu_658_p1);

assign sub_ln22_fu_646_p2 = ($signed(sext_ln22_2_fu_642_p1) - $signed(sext_ln22_1_fu_630_p1));

assign sub_ln32_1_fu_756_p2 = (p_shl1_cast_fu_748_p3 - trunc_ln32_2_fu_740_p1);

assign sub_ln32_fu_719_p2 = (p_shl_cast_fu_711_p3 - trunc_ln32_fu_703_p1);

assign sub_ln34_1_fu_830_p2 = (p_shl9_cast_fu_822_p3 - trunc_ln34_fu_814_p1);

assign sub_ln34_fu_802_p2 = ($signed(sext_ln34_2_fu_798_p1) - $signed(sext_ln34_1_fu_786_p1));

assign sub_ln45_1_fu_908_p2 = (p_shl3_cast_fu_900_p3 - trunc_ln45_2_fu_892_p1);

assign sub_ln45_fu_871_p2 = (p_shl2_cast_fu_863_p3 - trunc_ln45_fu_855_p1);

assign sub_ln47_1_fu_983_p2 = (p_shl10_cast_fu_975_p3 - trunc_ln47_fu_967_p1);

assign sub_ln47_fu_955_p2 = ($signed(sext_ln47_2_fu_951_p1) - $signed(sext_ln47_1_fu_939_p1));

assign sub_ln60_1_fu_1064_p2 = (p_shl11_cast_fu_1056_p3 - trunc_ln60_fu_1048_p1);

assign sub_ln60_fu_1036_p2 = ($signed(sext_ln60_2_fu_1032_p1) - $signed(sext_ln60_1_fu_1020_p1));

assign tmp_1_fu_400_p3 = {{i_0_reg_203}, {1'd0}};

assign tmp_2_fu_424_p3 = {{add_ln20_fu_418_p2}, {3'd0}};

assign tmp_3_fu_436_p3 = {{add_ln20_fu_418_p2}, {1'd0}};

assign tmp_6_fu_943_p3 = {{r1_1_reg_227}, {2'd0}};

assign tmp_8_fu_634_p3 = {{r1_1_reg_227}, {2'd0}};

assign tmp_9_fu_1024_p3 = {{r1_1_reg_227}, {2'd0}};

assign tmp_fu_388_p3 = {{i_0_reg_203}, {3'd0}};

assign tmp_s_fu_790_p3 = {{r1_1_reg_227}, {2'd0}};

assign trunc_ln20_1_fu_473_p1 = add_ln20_2_fu_464_p2[5:0];

assign trunc_ln20_2_fu_506_p1 = add_ln20_4_fu_501_p2[7:0];

assign trunc_ln20_3_fu_510_p1 = add_ln20_4_fu_501_p2[5:0];

assign trunc_ln20_4_fu_552_p1 = add_ln20_6_fu_547_p2[7:0];

assign trunc_ln20_5_fu_556_p1 = add_ln20_6_fu_547_p2[5:0];

assign trunc_ln20_6_fu_589_p1 = add_ln20_8_fu_584_p2[7:0];

assign trunc_ln20_7_fu_593_p1 = add_ln20_8_fu_584_p2[5:0];

assign trunc_ln20_fu_469_p1 = add_ln20_2_fu_464_p2[7:0];

assign trunc_ln22_1_fu_662_p1 = add_ln22_fu_652_p2[3:0];

assign trunc_ln22_fu_658_p1 = add_ln22_fu_652_p2[5:0];

assign trunc_ln32_1_fu_707_p1 = add_ln32_1_fu_698_p2[5:0];

assign trunc_ln32_2_fu_740_p1 = add_ln32_3_fu_735_p2[7:0];

assign trunc_ln32_3_fu_744_p1 = add_ln32_3_fu_735_p2[5:0];

assign trunc_ln32_fu_703_p1 = add_ln32_1_fu_698_p2[7:0];

assign trunc_ln34_1_fu_818_p1 = add_ln34_fu_808_p2[3:0];

assign trunc_ln34_fu_814_p1 = add_ln34_fu_808_p2[5:0];

assign trunc_ln45_1_fu_859_p1 = add_ln45_1_fu_850_p2[5:0];

assign trunc_ln45_2_fu_892_p1 = add_ln45_3_fu_887_p2[7:0];

assign trunc_ln45_3_fu_896_p1 = add_ln45_3_fu_887_p2[5:0];

assign trunc_ln45_fu_855_p1 = add_ln45_1_fu_850_p2[7:0];

assign trunc_ln47_1_fu_971_p1 = add_ln47_fu_961_p2[3:0];

assign trunc_ln47_fu_967_p1 = add_ln47_fu_961_p2[5:0];

assign trunc_ln60_1_fu_1052_p1 = add_ln60_fu_1042_p2[3:0];

assign trunc_ln60_fu_1048_p1 = add_ln60_fu_1042_p2[5:0];

assign zext_ln14_1_fu_378_p1 = k_0_reg_168;

assign zext_ln14_fu_374_p1 = k_0_reg_168;

assign zext_ln20_1_fu_533_p1 = add_ln20_5_fu_528_p2;

assign zext_ln20_2_fu_579_p1 = add_ln20_7_fu_574_p2;

assign zext_ln20_3_fu_616_p1 = add_ln20_9_fu_611_p2;

assign zext_ln20_fu_496_p1 = add_ln20_3_fu_491_p2;

assign zext_ln22_fu_685_p1 = add_ln22_1_fu_680_p2;

assign zext_ln32_1_fu_767_p1 = add_ln32_4_fu_762_p2;

assign zext_ln32_fu_730_p1 = add_ln32_2_fu_725_p2;

assign zext_ln34_fu_841_p1 = add_ln34_1_fu_836_p2;

assign zext_ln45_1_fu_919_p1 = add_ln45_4_fu_914_p2;

assign zext_ln45_fu_882_p1 = add_ln45_2_fu_877_p2;

assign zext_ln47_fu_994_p1 = add_ln47_1_fu_989_p2;

assign zext_ln60_fu_1075_p1 = add_ln60_1_fu_1070_p2;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1099[5:2] <= 4'b0000;
    zext_ln14_1_reg_1107[7:2] <= 6'b000000;
    sub_ln20_reg_1122[0] <= 1'b0;
    sub_ln20_1_reg_1130[0] <= 1'b0;
end

endmodule //Max_Pooling

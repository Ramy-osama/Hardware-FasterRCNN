// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Max_Pooling (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_address0,
        image_r_ce0,
        image_r_q0,
        image_r_address1,
        image_r_ce1,
        image_r_q1,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] image_r_address0;
output   image_r_ce0;
input  [31:0] image_r_q0;
output  [4:0] image_r_address1;
output   image_r_ce1;
input  [31:0] image_r_q1;
output  [2:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] image_r_address0;
reg image_r_ce0;
reg[4:0] image_r_address1;
reg image_r_ce1;
reg[2:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[31:0] out_r_d0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] k_fu_338_p2;
reg   [1:0] k_reg_782;
wire    ap_CS_fsm_state2;
wire   [4:0] zext_ln22_fu_352_p1;
reg   [4:0] zext_ln22_reg_787;
wire   [0:0] icmp_ln9_fu_332_p2;
wire   [2:0] tmp_s_fu_356_p3;
reg   [2:0] tmp_s_reg_792;
wire   [4:0] add_ln20_fu_374_p2;
reg   [4:0] add_ln20_reg_803;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln14_fu_364_p2;
wire   [0:0] trunc_ln20_fu_379_p1;
reg   [0:0] trunc_ln20_reg_811;
wire   [1:0] or_ln20_fu_387_p2;
reg   [1:0] or_ln20_reg_816;
wire   [6:0] zext_ln16_fu_403_p1;
reg   [6:0] zext_ln16_reg_823;
wire   [0:0] icmp_ln24_1_fu_415_p2;
reg   [0:0] icmp_ln24_1_reg_831;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_2_fu_407_p3;
wire   [2:0] i_fu_470_p2;
reg   [31:0] image_load_reg_851;
wire    ap_CS_fsm_state5;
reg   [31:0] image_load_1_reg_860;
wire   [0:0] grp_fu_280_p2;
reg   [0:0] icmp_ln20_reg_869;
wire   [1:0] or_ln20_1_fu_480_p2;
reg   [1:0] or_ln20_1_reg_873;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln20_1_fu_511_p2;
reg   [0:0] icmp_ln20_1_reg_888;
reg   [0:0] icmp_ln20_2_reg_892;
wire    ap_CS_fsm_state7;
wire   [31:0] grp_fu_309_p3;
wire   [31:0] grp_fu_318_p3;
wire   [0:0] icmp_ln32_fu_552_p2;
reg   [0:0] icmp_ln32_reg_906;
wire   [1:0] or_ln32_fu_560_p2;
reg   [1:0] or_ln32_reg_910;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln32_1_fu_591_p2;
reg   [0:0] icmp_ln32_1_reg_925;
wire   [0:0] icmp_ln32_2_fu_596_p2;
reg   [0:0] icmp_ln32_2_reg_929;
wire    ap_CS_fsm_state9;
reg   [4:0] image_addr_7_reg_948;
reg   [31:0] image_load_6_reg_954;
wire    ap_CS_fsm_state10;
wire   [0:0] or_ln45_1_fu_673_p2;
reg   [0:0] or_ln45_1_reg_961;
wire   [0:0] icmp_ln45_2_fu_679_p2;
reg   [0:0] icmp_ln45_2_reg_965;
wire    ap_CS_fsm_state11;
wire   [2:0] j_fu_773_p2;
wire    ap_CS_fsm_state12;
reg   [1:0] k_0_reg_160;
reg   [31:0] c1_0_reg_172;
reg   [31:0] r1_0_reg_184;
reg   [2:0] i_0_reg_196;
reg   [31:0] ap_phi_mux_c1_6_phi_fu_248_p10;
reg   [31:0] c1_1_reg_208;
reg   [31:0] ap_phi_mux_r1_6_phi_fu_266_p10;
reg   [31:0] r1_1_reg_220;
reg   [2:0] j_0_reg_232;
reg   [31:0] c1_6_reg_244;
wire   [0:0] or_ln58_1_fu_731_p2;
reg   [31:0] r1_6_reg_262;
wire   [63:0] zext_ln20_2_fu_455_p1;
wire   [63:0] zext_ln20_3_fu_465_p1;
wire   [63:0] zext_ln20_5_fu_493_p1;
wire   [63:0] zext_ln20_4_fu_506_p1;
wire   [63:0] zext_ln22_2_fu_547_p1;
wire   [63:0] zext_ln32_1_fu_573_p1;
wire   [63:0] zext_ln32_fu_586_p1;
wire   [63:0] zext_ln34_1_fu_632_p1;
wire   [63:0] zext_ln45_1_fu_654_p1;
wire   [63:0] zext_ln45_fu_668_p1;
wire   [63:0] zext_ln47_1_fu_715_p1;
wire   [63:0] zext_ln60_1_fu_768_p1;
reg   [31:0] grp_fu_280_p0;
reg   [31:0] grp_fu_280_p1;
wire   [31:0] grp_fu_286_p2;
wire   [0:0] grp_fu_292_p2;
wire   [0:0] grp_fu_298_p2;
wire   [31:0] grp_fu_303_p2;
wire   [3:0] tmp_fu_344_p3;
wire   [4:0] zext_ln20_fu_370_p1;
wire   [1:0] trunc_ln14_fu_383_p1;
wire   [5:0] tmp_4_fu_393_p4;
wire   [2:0] tmp_5_fu_425_p3;
wire   [3:0] tmp_3_fu_438_p4;
wire   [2:0] or_ln20_2_fu_432_p2;
wire   [6:0] tmp_6_fu_447_p3;
wire   [6:0] zext_ln20_1_fu_421_p1;
wire   [6:0] add_ln20_1_fu_460_p2;
wire   [1:0] trunc_ln16_fu_476_p1;
wire   [6:0] tmp_7_fu_486_p3;
wire   [5:0] tmp_8_fu_498_p4;
wire   [3:0] zext_ln22_1_fu_524_p1;
wire   [3:0] trunc_ln22_1_fu_520_p1;
wire   [3:0] add_ln22_fu_527_p2;
wire   [4:0] tmp_29_cast_fu_533_p3;
wire   [4:0] trunc_ln22_fu_516_p1;
wire   [4:0] add_ln22_1_fu_541_p2;
wire   [1:0] trunc_ln16_1_fu_556_p1;
wire   [6:0] tmp_9_fu_566_p3;
wire   [5:0] tmp_10_fu_578_p4;
wire   [3:0] zext_ln34_fu_609_p1;
wire   [3:0] trunc_ln34_1_fu_605_p1;
wire   [3:0] add_ln34_fu_612_p2;
wire   [4:0] tmp_35_cast_fu_618_p3;
wire   [4:0] trunc_ln34_fu_601_p1;
wire   [4:0] add_ln34_1_fu_626_p2;
wire   [1:0] trunc_ln16_2_fu_637_p1;
wire   [1:0] or_ln45_fu_641_p2;
wire   [6:0] tmp_11_fu_647_p3;
wire   [5:0] tmp_12_fu_659_p4;
wire   [0:0] grp_fu_327_p2;
wire   [3:0] zext_ln47_fu_692_p1;
wire   [3:0] trunc_ln47_1_fu_688_p1;
wire   [3:0] add_ln47_fu_695_p2;
wire   [4:0] tmp_37_cast_fu_701_p3;
wire   [4:0] trunc_ln47_fu_684_p1;
wire   [4:0] add_ln47_1_fu_709_p2;
wire   [0:0] icmp_ln58_1_fu_720_p2;
wire   [0:0] or_ln58_fu_725_p2;
wire   [3:0] zext_ln60_fu_745_p1;
wire   [3:0] trunc_ln60_1_fu_741_p1;
wire   [3:0] add_ln60_fu_748_p2;
wire   [4:0] tmp_39_cast_fu_754_p3;
wire   [4:0] trunc_ln60_fu_737_p1;
wire   [4:0] add_ln60_1_fu_762_p2;
reg   [11:0] ap_NS_fsm;
reg    ap_condition_313;
reg    ap_condition_351;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c1_0_reg_172 <= 32'd0;
    end else if (((tmp_2_fu_407_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c1_0_reg_172 <= c1_1_reg_208;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        c1_1_reg_208 <= c1_0_reg_172;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        c1_1_reg_208 <= ap_phi_mux_c1_6_phi_fu_248_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1)) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))))) begin
        c1_6_reg_244 <= c1_1_reg_208;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)))) | ((icmp_ln45_2_fu_679_p2 == 1'd0) & (or_ln45_1_reg_961 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln32_2_fu_596_p2 == 1'd0) & (icmp_ln32_1_reg_925 == 1'd0) & (icmp_ln32_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln20_1_reg_888 == 1'd0) & (icmp_ln20_reg_869 == 1'd0) & (grp_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        c1_6_reg_244 <= grp_fu_309_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_196 <= 3'd0;
    end else if (((tmp_2_fu_407_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_196 <= i_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_reg_232 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_reg_232 <= j_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        k_0_reg_160 <= k_reg_782;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        k_0_reg_160 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        r1_0_reg_184 <= 32'd0;
    end else if (((tmp_2_fu_407_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        r1_0_reg_184 <= r1_1_reg_220;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r1_1_reg_220 <= r1_0_reg_184;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r1_1_reg_220 <= ap_phi_mux_r1_6_phi_fu_266_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1)) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))))) begin
        r1_6_reg_262 <= r1_1_reg_220;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)))) | ((icmp_ln45_2_fu_679_p2 == 1'd0) & (or_ln45_1_reg_961 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln32_2_fu_596_p2 == 1'd0) & (icmp_ln32_1_reg_925 == 1'd0) & (icmp_ln32_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln20_1_reg_888 == 1'd0) & (icmp_ln20_reg_869 == 1'd0) & (grp_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        r1_6_reg_262 <= grp_fu_318_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_364_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln20_reg_803 <= add_ln20_fu_374_p2;
        or_ln20_reg_816[1] <= or_ln20_fu_387_p2[1];
        trunc_ln20_reg_811 <= trunc_ln20_fu_379_p1;
        zext_ln16_reg_823[5 : 3] <= zext_ln16_fu_403_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln20_1_reg_888 <= icmp_ln20_1_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_1_reg_888 == 1'd0) & (icmp_ln20_reg_869 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln20_2_reg_892 <= grp_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln20_reg_869 <= grp_fu_280_p2;
        image_load_1_reg_860 <= image_r_q1;
        image_load_reg_851 <= image_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln24_1_reg_831 <= icmp_ln24_1_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln32_1_reg_925 <= icmp_ln32_1_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_reg_925 == 1'd0) & (icmp_ln32_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln32_2_reg_929 <= icmp_ln32_2_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln20_reg_869 == 1'd1) | ((icmp_ln20_1_reg_888 == 1'd1) | (grp_fu_280_p2 == 1'd1))))) begin
        icmp_ln32_reg_906 <= icmp_ln32_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln45_1_reg_961 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        icmp_ln45_2_reg_965 <= icmp_ln45_2_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ((icmp_ln32_reg_906 == 1'd1) | ((icmp_ln32_2_fu_596_p2 == 1'd1) | (icmp_ln32_1_reg_925 == 1'd1))))) begin
        image_addr_7_reg_948[1] <= zext_ln45_fu_668_p1[1];
image_addr_7_reg_948[4 : 3] <= zext_ln45_fu_668_p1[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        image_load_6_reg_954 <= image_r_q0;
        or_ln45_1_reg_961 <= or_ln45_1_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_reg_782 <= k_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        or_ln20_1_reg_873[1] <= or_ln20_1_fu_480_p2[1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((((icmp_ln20_1_reg_888 == 1'd1) & (icmp_ln32_fu_552_p2 == 1'd0)) | ((grp_fu_280_p2 == 1'd1) & (icmp_ln32_fu_552_p2 == 1'd0))) | ((icmp_ln20_reg_869 == 1'd1) & (icmp_ln32_fu_552_p2 == 1'd0))))) begin
        or_ln32_reg_910[1] <= or_ln32_fu_560_p2[1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_332_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_s_reg_792[2 : 1] <= tmp_s_fu_356_p3[2 : 1];
        zext_ln22_reg_787[3 : 2] <= zext_ln22_fu_352_p1[3 : 2];
    end
end

always @ (*) begin
    if ((((icmp_ln9_fu_332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_351)) begin
            ap_phi_mux_c1_6_phi_fu_248_p10 = c1_1_reg_208;
        end else if ((1'b1 == ap_condition_313)) begin
            ap_phi_mux_c1_6_phi_fu_248_p10 = grp_fu_309_p3;
        end else begin
            ap_phi_mux_c1_6_phi_fu_248_p10 = c1_6_reg_244;
        end
    end else begin
        ap_phi_mux_c1_6_phi_fu_248_p10 = c1_6_reg_244;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_351)) begin
            ap_phi_mux_r1_6_phi_fu_266_p10 = r1_1_reg_220;
        end else if ((1'b1 == ap_condition_313)) begin
            ap_phi_mux_r1_6_phi_fu_266_p10 = grp_fu_318_p3;
        end else begin
            ap_phi_mux_r1_6_phi_fu_266_p10 = r1_6_reg_262;
        end
    end else begin
        ap_phi_mux_r1_6_phi_fu_266_p10 = r1_6_reg_262;
    end
end

always @ (*) begin
    if (((icmp_ln9_fu_332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_280_p0 = image_load_reg_851;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_280_p0 = image_r_q0;
    end else begin
        grp_fu_280_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_280_p1 = image_load_1_reg_860;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_280_p1 = image_r_q1;
    end else begin
        grp_fu_280_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        image_r_address0 = image_addr_7_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        image_r_address0 = zext_ln45_1_fu_654_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        image_r_address0 = zext_ln32_1_fu_573_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        image_r_address0 = zext_ln20_5_fu_493_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_address0 = zext_ln20_2_fu_455_p1;
    end else begin
        image_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        image_r_address1 = image_addr_7_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        image_r_address1 = zext_ln32_fu_586_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        image_r_address1 = zext_ln20_4_fu_506_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        image_r_address1 = zext_ln20_3_fu_465_p1;
    end else begin
        image_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        image_r_ce0 = 1'b1;
    end else begin
        image_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        image_r_ce1 = 1'b1;
    end else begin
        image_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_r_address0 = zext_ln60_1_fu_768_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        out_r_address0 = zext_ln47_1_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_r_address0 = zext_ln34_1_fu_632_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_address0 = zext_ln22_2_fu_547_p1;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        out_r_d0 = image_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        out_r_d0 = image_load_6_reg_954;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        out_r_d0 = image_load_1_reg_860;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_r_d0 = image_load_reg_851;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((((((((((((((((((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)))) | ((icmp_ln45_2_fu_679_p2 == 1'd0) & (or_ln45_1_reg_961 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln32_2_fu_596_p2 == 1'd0) & (icmp_ln32_1_reg_925 == 1'd0) & (icmp_ln32_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln20_1_reg_888 == 1'd0) & (icmp_ln20_reg_869 == 1'd0) & (grp_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_332_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln14_fu_364_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_2_fu_407_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((grp_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((((icmp_ln32_fu_552_p2 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1)) | ((icmp_ln32_fu_552_p2 == 1'd1) & (grp_fu_280_p2 == 1'd1))) | ((icmp_ln32_fu_552_p2 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state7) & ((((icmp_ln20_1_reg_888 == 1'd1) & (icmp_ln32_fu_552_p2 == 1'd0)) | ((grp_fu_280_p2 == 1'd1) & (icmp_ln32_fu_552_p2 == 1'd0))) | ((icmp_ln20_reg_869 == 1'd1) & (icmp_ln32_fu_552_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln32_2_fu_596_p2 == 1'd0) & (icmp_ln32_1_reg_925 == 1'd0) & (icmp_ln32_reg_906 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln20_1_fu_460_p2 = (zext_ln20_1_fu_421_p1 + zext_ln16_reg_823);

assign add_ln20_fu_374_p2 = (zext_ln20_fu_370_p1 + zext_ln22_reg_787);

assign add_ln22_1_fu_541_p2 = (tmp_29_cast_fu_533_p3 + trunc_ln22_fu_516_p1);

assign add_ln22_fu_527_p2 = (zext_ln22_1_fu_524_p1 + trunc_ln22_1_fu_520_p1);

assign add_ln34_1_fu_626_p2 = (tmp_35_cast_fu_618_p3 + trunc_ln34_fu_601_p1);

assign add_ln34_fu_612_p2 = (zext_ln34_fu_609_p1 + trunc_ln34_1_fu_605_p1);

assign add_ln47_1_fu_709_p2 = (tmp_37_cast_fu_701_p3 + trunc_ln47_fu_684_p1);

assign add_ln47_fu_695_p2 = (zext_ln47_fu_692_p1 + trunc_ln47_1_fu_688_p1);

assign add_ln60_1_fu_762_p2 = (tmp_39_cast_fu_754_p3 + trunc_ln60_fu_737_p1);

assign add_ln60_fu_748_p2 = (zext_ln60_fu_745_p1 + trunc_ln60_1_fu_741_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_313 = (((((((((((((((((((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0))) | ((or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1) & (or_ln58_1_fu_731_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_351 = (((((((((((((((((((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1)) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_2_reg_892 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_1_reg_888 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_2_reg_929 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_1_reg_925 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (icmp_ln45_2_reg_965 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1))) | ((or_ln58_1_fu_731_p2 == 1'd1) & (or_ln45_1_reg_961 == 1'd1) & (icmp_ln32_reg_906 == 1'd1) & (icmp_ln20_reg_869 == 1'd1)));
end

assign grp_fu_280_p2 = (($signed(grp_fu_280_p0) < $signed(grp_fu_280_p1)) ? 1'b1 : 1'b0);

assign grp_fu_286_p2 = (32'd1 + c1_1_reg_208);

assign grp_fu_292_p2 = ((grp_fu_286_p2 == 32'd2) ? 1'b1 : 1'b0);

assign grp_fu_298_p2 = (icmp_ln24_1_reg_831 & grp_fu_292_p2);

assign grp_fu_303_p2 = (32'd1 + r1_1_reg_220);

assign grp_fu_309_p3 = ((grp_fu_298_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_286_p2);

assign grp_fu_318_p3 = ((grp_fu_298_p2[0:0] === 1'b1) ? grp_fu_303_p2 : r1_1_reg_220);

assign grp_fu_327_p2 = (($signed(image_r_q0) < $signed(image_load_reg_851)) ? 1'b1 : 1'b0);

assign i_fu_470_p2 = (i_0_reg_196 + 3'd2);

assign icmp_ln14_fu_364_p2 = ((i_0_reg_196 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_511_p2 = (($signed(image_load_reg_851) < $signed(image_r_q0)) ? 1'b1 : 1'b0);

assign icmp_ln24_1_fu_415_p2 = (($signed(r1_1_reg_220) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_591_p2 = (($signed(image_load_1_reg_860) < $signed(image_r_q0)) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_596_p2 = (($signed(image_load_1_reg_860) < $signed(image_r_q1)) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_552_p2 = (($signed(image_load_1_reg_860) < $signed(image_load_reg_851)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_679_p2 = (($signed(image_load_6_reg_954) < $signed(image_r_q1)) ? 1'b1 : 1'b0);

assign icmp_ln58_1_fu_720_p2 = (($signed(image_r_q0) < $signed(image_load_6_reg_954)) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_332_p2 = ((k_0_reg_160 == 2'd2) ? 1'b1 : 1'b0);

assign j_fu_773_p2 = (j_0_reg_232 + 3'd2);

assign k_fu_338_p2 = (k_0_reg_160 + 2'd1);

assign or_ln20_1_fu_480_p2 = (trunc_ln16_fu_476_p1 | 2'd1);

assign or_ln20_2_fu_432_p2 = (tmp_5_fu_425_p3 | j_0_reg_232);

assign or_ln20_fu_387_p2 = (trunc_ln14_fu_383_p1 | 2'd1);

assign or_ln32_fu_560_p2 = (trunc_ln16_1_fu_556_p1 | 2'd1);

assign or_ln45_1_fu_673_p2 = (grp_fu_327_p2 | grp_fu_280_p2);

assign or_ln45_fu_641_p2 = (trunc_ln16_2_fu_637_p1 | 2'd1);

assign or_ln58_1_fu_731_p2 = (or_ln58_fu_725_p2 | grp_fu_327_p2);

assign or_ln58_fu_725_p2 = (icmp_ln58_1_fu_720_p2 | grp_fu_280_p2);

assign tmp_10_fu_578_p4 = {{{k_0_reg_160}, {or_ln20_reg_816}}, {or_ln32_reg_910}};

assign tmp_11_fu_647_p3 = {{add_ln20_reg_803}, {or_ln45_fu_641_p2}};

assign tmp_12_fu_659_p4 = {{{k_0_reg_160}, {or_ln20_reg_816}}, {or_ln45_fu_641_p2}};

assign tmp_29_cast_fu_533_p3 = {{add_ln22_fu_527_p2}, {1'd0}};

assign tmp_2_fu_407_p3 = j_0_reg_232[32'd2];

assign tmp_35_cast_fu_618_p3 = {{add_ln34_fu_612_p2}, {1'd0}};

assign tmp_37_cast_fu_701_p3 = {{add_ln47_fu_695_p2}, {1'd0}};

assign tmp_39_cast_fu_754_p3 = {{add_ln60_fu_748_p2}, {1'd0}};

assign tmp_3_fu_438_p4 = {{add_ln20_reg_803[4:1]}};

assign tmp_4_fu_393_p4 = {{{k_0_reg_160}, {or_ln20_fu_387_p2}}, {2'd0}};

assign tmp_5_fu_425_p3 = {{trunc_ln20_reg_811}, {2'd0}};

assign tmp_6_fu_447_p3 = {{tmp_3_fu_438_p4}, {or_ln20_2_fu_432_p2}};

assign tmp_7_fu_486_p3 = {{add_ln20_reg_803}, {or_ln20_1_fu_480_p2}};

assign tmp_8_fu_498_p4 = {{{k_0_reg_160}, {or_ln20_reg_816}}, {or_ln20_1_reg_873}};

assign tmp_9_fu_566_p3 = {{add_ln20_reg_803}, {or_ln32_fu_560_p2}};

assign tmp_fu_344_p3 = {{k_0_reg_160}, {2'd0}};

assign tmp_s_fu_356_p3 = {{k_0_reg_160}, {1'd0}};

assign trunc_ln14_fu_383_p1 = i_0_reg_196[1:0];

assign trunc_ln16_1_fu_556_p1 = j_0_reg_232[1:0];

assign trunc_ln16_2_fu_637_p1 = j_0_reg_232[1:0];

assign trunc_ln16_fu_476_p1 = j_0_reg_232[1:0];

assign trunc_ln20_fu_379_p1 = add_ln20_fu_374_p2[0:0];

assign trunc_ln22_1_fu_520_p1 = r1_1_reg_220[3:0];

assign trunc_ln22_fu_516_p1 = c1_1_reg_208[4:0];

assign trunc_ln34_1_fu_605_p1 = r1_1_reg_220[3:0];

assign trunc_ln34_fu_601_p1 = c1_1_reg_208[4:0];

assign trunc_ln47_1_fu_688_p1 = r1_1_reg_220[3:0];

assign trunc_ln47_fu_684_p1 = c1_1_reg_208[4:0];

assign trunc_ln60_1_fu_741_p1 = r1_1_reg_220[3:0];

assign trunc_ln60_fu_737_p1 = c1_1_reg_208[4:0];

assign zext_ln16_fu_403_p1 = tmp_4_fu_393_p4;

assign zext_ln20_1_fu_421_p1 = j_0_reg_232;

assign zext_ln20_2_fu_455_p1 = tmp_6_fu_447_p3;

assign zext_ln20_3_fu_465_p1 = add_ln20_1_fu_460_p2;

assign zext_ln20_4_fu_506_p1 = tmp_8_fu_498_p4;

assign zext_ln20_5_fu_493_p1 = tmp_7_fu_486_p3;

assign zext_ln20_fu_370_p1 = i_0_reg_196;

assign zext_ln22_1_fu_524_p1 = tmp_s_reg_792;

assign zext_ln22_2_fu_547_p1 = add_ln22_1_fu_541_p2;

assign zext_ln22_fu_352_p1 = tmp_fu_344_p3;

assign zext_ln32_1_fu_573_p1 = tmp_9_fu_566_p3;

assign zext_ln32_fu_586_p1 = tmp_10_fu_578_p4;

assign zext_ln34_1_fu_632_p1 = add_ln34_1_fu_626_p2;

assign zext_ln34_fu_609_p1 = tmp_s_reg_792;

assign zext_ln45_1_fu_654_p1 = tmp_11_fu_647_p3;

assign zext_ln45_fu_668_p1 = tmp_12_fu_659_p4;

assign zext_ln47_1_fu_715_p1 = add_ln47_1_fu_709_p2;

assign zext_ln47_fu_692_p1 = tmp_s_reg_792;

assign zext_ln60_1_fu_768_p1 = add_ln60_1_fu_762_p2;

assign zext_ln60_fu_745_p1 = tmp_s_reg_792;

always @ (posedge ap_clk) begin
    zext_ln22_reg_787[1:0] <= 2'b00;
    zext_ln22_reg_787[4] <= 1'b0;
    tmp_s_reg_792[0] <= 1'b0;
    or_ln20_reg_816[0] <= 1'b1;
    zext_ln16_reg_823[2:0] <= 3'b100;
    zext_ln16_reg_823[6] <= 1'b0;
    or_ln20_1_reg_873[0] <= 1'b1;
    or_ln32_reg_910[0] <= 1'b1;
    image_addr_7_reg_948[0] <= 1'b1;
    image_addr_7_reg_948[2] <= 1'b1;
end

endmodule //Max_Pooling
